
// This file has been generated by the GUI designer. Do not modify.
namespace ParksideViewGTK
{
	internal partial class MainWindow
	{
		private global::Gtk.VBox mailVbox;
		
		private global::Gtk.EventBox readoutEventBox;
		
		private global::Gtk.Table readoutTable;
		
		private global::Gtk.Label modeLabel;
		
		private global::Gtk.Label unitLabel;
		
		private global::Gtk.Label valueLabel;
		
		private global::Gtk.ProgressBar bargraphBar;
		
		private global::Gtk.Frame connectionGroup;
		
		private global::Gtk.Alignment connectionAlignment;
		
		private global::Gtk.Table connectionTable;
		
		private global::Gtk.Button connectButton;
		
		private global::Gtk.Label connectionStatusLabel;
		
		private global::Gtk.Label portLabel;
		
		private global::Gtk.ComboBox portsListBox;
		
		private global::Gtk.Button refreshPortsButton;
		
		private global::Gtk.Label connectionGroupLabel;
		
		private global::Gtk.Frame acquisitionGroup;
		
		private global::Gtk.Alignment acquisitionAlignment;
		
		private global::Gtk.Table acquisitionTable;
		
		private global::Gtk.Button acquisitionPauseButton;
		
		private global::Gtk.Label acquisitionStatusLabel;
		
		private global::Gtk.Frame csvFormatGroup;
		
		private global::Gtk.Alignment csvFormatAlignment;
		
		private global::Gtk.VBox csvFormatVbox;
		
		private global::Gtk.RadioButton csvFormatUSRadio;
		
		private global::Gtk.RadioButton csvFormatDERadio;
		
		private global::Gtk.Label csvFormatGroupLabel;
		
		private global::Gtk.Label intervalLabel;
		
		private global::Gtk.SpinButton intervalNumeric;
		
		private global::Gtk.Button intervalSetButton;
		
		private global::Gtk.Button recordToggleButton;
		
		private global::Gtk.Label acquisitionGroupLabel;
		
		private global::Gtk.EventBox copyrightEventBox;
		
		private global::Gtk.Label copyrightLabel;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget ParksideViewGTK.MainWindow
			this.WidthRequest = 340;
			this.HeightRequest = 380;
			this.Name = "ParksideViewGTK.MainWindow";
			this.Title = "ParksideViewGTK";
			this.Icon = global::Gdk.Pixbuf.LoadFromResource ("ParksideViewGTK.ParksideView.ico");
			this.TypeHint = ((global::Gdk.WindowTypeHint)(1));
			this.WindowPosition = ((global::Gtk.WindowPosition)(1));
			this.Resizable = false;
			this.AllowGrow = false;
			this.Gravity = ((global::Gdk.Gravity)(5));
			// Container child ParksideViewGTK.MainWindow.Gtk.Container+ContainerChild
			this.mailVbox = new global::Gtk.VBox ();
			this.mailVbox.Name = "mailVbox";
			this.mailVbox.Spacing = 6;
			this.mailVbox.BorderWidth = ((uint)(5));
			// Container child mailVbox.Gtk.Box+BoxChild
			this.readoutEventBox = new global::Gtk.EventBox ();
			this.readoutEventBox.Name = "readoutEventBox";
			// Container child readoutEventBox.Gtk.Container+ContainerChild
			this.readoutTable = new global::Gtk.Table (((uint)(2)), ((uint)(2)), false);
			this.readoutTable.Name = "readoutTable";
			// Container child readoutTable.Gtk.Table+TableChild
			this.modeLabel = new global::Gtk.Label ();
			this.modeLabel.Name = "modeLabel";
			this.modeLabel.Ypad = 6;
			this.modeLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("Volt (DC)");
			this.modeLabel.Justify = ((global::Gtk.Justification)(2));
			this.readoutTable.Add (this.modeLabel);
			global::Gtk.Table.TableChild w1 = ((global::Gtk.Table.TableChild)(this.readoutTable [this.modeLabel]));
			w1.TopAttach = ((uint)(1));
			w1.BottomAttach = ((uint)(2));
			w1.RightAttach = ((uint)(2));
			// Container child readoutTable.Gtk.Table+TableChild
			this.unitLabel = new global::Gtk.Label ();
			this.unitLabel.WidthRequest = 100;
			this.unitLabel.Name = "unitLabel";
			this.unitLabel.Xalign = 0F;
			this.unitLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("mV");
			this.readoutTable.Add (this.unitLabel);
			global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.readoutTable [this.unitLabel]));
			w2.LeftAttach = ((uint)(1));
			w2.RightAttach = ((uint)(2));
			w2.XOptions = ((global::Gtk.AttachOptions)(4));
			w2.YOptions = ((global::Gtk.AttachOptions)(1));
			// Container child readoutTable.Gtk.Table+TableChild
			this.valueLabel = new global::Gtk.Label ();
			this.valueLabel.Name = "valueLabel";
			this.valueLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("3.00");
			this.valueLabel.Justify = ((global::Gtk.Justification)(2));
			this.readoutTable.Add (this.valueLabel);
			global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.readoutTable [this.valueLabel]));
			w3.YOptions = ((global::Gtk.AttachOptions)(1));
			this.readoutEventBox.Add (this.readoutTable);
			this.mailVbox.Add (this.readoutEventBox);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.mailVbox [this.readoutEventBox]));
			w5.Position = 0;
			// Container child mailVbox.Gtk.Box+BoxChild
			this.bargraphBar = new global::Gtk.ProgressBar ();
			this.bargraphBar.HeightRequest = 15;
			this.bargraphBar.Name = "bargraphBar";
			this.mailVbox.Add (this.bargraphBar);
			global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.mailVbox [this.bargraphBar]));
			w6.Position = 1;
			w6.Expand = false;
			w6.Fill = false;
			// Container child mailVbox.Gtk.Box+BoxChild
			this.connectionGroup = new global::Gtk.Frame ();
			this.connectionGroup.Name = "connectionGroup";
			// Container child connectionGroup.Gtk.Container+ContainerChild
			this.connectionAlignment = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
			this.connectionAlignment.Name = "connectionAlignment";
			this.connectionAlignment.LeftPadding = ((uint)(10));
			this.connectionAlignment.TopPadding = ((uint)(5));
			this.connectionAlignment.RightPadding = ((uint)(10));
			this.connectionAlignment.BottomPadding = ((uint)(5));
			// Container child connectionAlignment.Gtk.Container+ContainerChild
			this.connectionTable = new global::Gtk.Table (((uint)(3)), ((uint)(4)), false);
			this.connectionTable.Name = "connectionTable";
			this.connectionTable.RowSpacing = ((uint)(6));
			this.connectionTable.ColumnSpacing = ((uint)(6));
			// Container child connectionTable.Gtk.Table+TableChild
			this.connectButton = new global::Gtk.Button ();
			this.connectButton.CanFocus = true;
			this.connectButton.Name = "connectButton";
			this.connectButton.UseUnderline = true;
			global::Gtk.Image w7 = new global::Gtk.Image ();
			w7.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-connect", global::Gtk.IconSize.Button);
			this.connectButton.Image = w7;
			this.connectionTable.Add (this.connectButton);
			global::Gtk.Table.TableChild w8 = ((global::Gtk.Table.TableChild)(this.connectionTable [this.connectButton]));
			w8.LeftAttach = ((uint)(3));
			w8.RightAttach = ((uint)(4));
			w8.XOptions = ((global::Gtk.AttachOptions)(4));
			w8.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child connectionTable.Gtk.Table+TableChild
			this.connectionStatusLabel = new global::Gtk.Label ();
			this.connectionStatusLabel.Name = "connectionStatusLabel";
			this.connectionStatusLabel.Xalign = 0F;
			this.connectionStatusLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("Status: Disconnected.");
			this.connectionTable.Add (this.connectionStatusLabel);
			global::Gtk.Table.TableChild w9 = ((global::Gtk.Table.TableChild)(this.connectionTable [this.connectionStatusLabel]));
			w9.TopAttach = ((uint)(1));
			w9.BottomAttach = ((uint)(3));
			w9.RightAttach = ((uint)(4));
			// Container child connectionTable.Gtk.Table+TableChild
			this.portLabel = new global::Gtk.Label ();
			this.portLabel.Name = "portLabel";
			this.portLabel.Xalign = 0F;
			this.portLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("Port:");
			this.connectionTable.Add (this.portLabel);
			global::Gtk.Table.TableChild w10 = ((global::Gtk.Table.TableChild)(this.connectionTable [this.portLabel]));
			w10.XOptions = ((global::Gtk.AttachOptions)(4));
			w10.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child connectionTable.Gtk.Table+TableChild
			this.portsListBox = global::Gtk.ComboBox.NewText ();
			this.portsListBox.Name = "portsListBox";
			this.connectionTable.Add (this.portsListBox);
			global::Gtk.Table.TableChild w11 = ((global::Gtk.Table.TableChild)(this.connectionTable [this.portsListBox]));
			w11.LeftAttach = ((uint)(1));
			w11.RightAttach = ((uint)(2));
			// Container child connectionTable.Gtk.Table+TableChild
			this.refreshPortsButton = new global::Gtk.Button ();
			this.refreshPortsButton.CanFocus = true;
			this.refreshPortsButton.Name = "refreshPortsButton";
			this.refreshPortsButton.UseUnderline = true;
			global::Gtk.Image w12 = new global::Gtk.Image ();
			w12.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-refresh", global::Gtk.IconSize.Button);
			this.refreshPortsButton.Image = w12;
			this.connectionTable.Add (this.refreshPortsButton);
			global::Gtk.Table.TableChild w13 = ((global::Gtk.Table.TableChild)(this.connectionTable [this.refreshPortsButton]));
			w13.LeftAttach = ((uint)(2));
			w13.RightAttach = ((uint)(3));
			w13.XOptions = ((global::Gtk.AttachOptions)(4));
			w13.YOptions = ((global::Gtk.AttachOptions)(4));
			this.connectionAlignment.Add (this.connectionTable);
			this.connectionGroup.Add (this.connectionAlignment);
			this.connectionGroupLabel = new global::Gtk.Label ();
			this.connectionGroupLabel.Name = "connectionGroupLabel";
			this.connectionGroupLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Connection</b>");
			this.connectionGroupLabel.UseMarkup = true;
			this.connectionGroup.LabelWidget = this.connectionGroupLabel;
			this.mailVbox.Add (this.connectionGroup);
			global::Gtk.Box.BoxChild w16 = ((global::Gtk.Box.BoxChild)(this.mailVbox [this.connectionGroup]));
			w16.Position = 2;
			w16.Expand = false;
			w16.Fill = false;
			// Container child mailVbox.Gtk.Box+BoxChild
			this.acquisitionGroup = new global::Gtk.Frame ();
			this.acquisitionGroup.Name = "acquisitionGroup";
			// Container child acquisitionGroup.Gtk.Container+ContainerChild
			this.acquisitionAlignment = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
			this.acquisitionAlignment.Name = "acquisitionAlignment";
			this.acquisitionAlignment.LeftPadding = ((uint)(10));
			this.acquisitionAlignment.TopPadding = ((uint)(5));
			this.acquisitionAlignment.RightPadding = ((uint)(10));
			this.acquisitionAlignment.BottomPadding = ((uint)(5));
			// Container child acquisitionAlignment.Gtk.Container+ContainerChild
			this.acquisitionTable = new global::Gtk.Table (((uint)(3)), ((uint)(4)), false);
			this.acquisitionTable.Name = "acquisitionTable";
			this.acquisitionTable.RowSpacing = ((uint)(6));
			this.acquisitionTable.ColumnSpacing = ((uint)(6));
			// Container child acquisitionTable.Gtk.Table+TableChild
			this.acquisitionPauseButton = new global::Gtk.Button ();
			this.acquisitionPauseButton.CanFocus = true;
			this.acquisitionPauseButton.Name = "acquisitionPauseButton";
			this.acquisitionPauseButton.UseUnderline = true;
			this.acquisitionPauseButton.Label = global::Mono.Unix.Catalog.GetString ("Pause");
			this.acquisitionTable.Add (this.acquisitionPauseButton);
			global::Gtk.Table.TableChild w17 = ((global::Gtk.Table.TableChild)(this.acquisitionTable [this.acquisitionPauseButton]));
			w17.LeftAttach = ((uint)(1));
			w17.RightAttach = ((uint)(2));
			w17.XOptions = ((global::Gtk.AttachOptions)(4));
			// Container child acquisitionTable.Gtk.Table+TableChild
			this.acquisitionStatusLabel = new global::Gtk.Label ();
			this.acquisitionStatusLabel.Name = "acquisitionStatusLabel";
			this.acquisitionStatusLabel.Xalign = 0F;
			this.acquisitionStatusLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("Status: Disconnected.");
			this.acquisitionTable.Add (this.acquisitionStatusLabel);
			global::Gtk.Table.TableChild w18 = ((global::Gtk.Table.TableChild)(this.acquisitionTable [this.acquisitionStatusLabel]));
			w18.TopAttach = ((uint)(2));
			w18.BottomAttach = ((uint)(3));
			w18.RightAttach = ((uint)(4));
			// Container child acquisitionTable.Gtk.Table+TableChild
			this.csvFormatGroup = new global::Gtk.Frame ();
			this.csvFormatGroup.Name = "csvFormatGroup";
			this.csvFormatGroup.ShadowType = ((global::Gtk.ShadowType)(0));
			// Container child csvFormatGroup.Gtk.Container+ContainerChild
			this.csvFormatAlignment = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
			this.csvFormatAlignment.Name = "csvFormatAlignment";
			this.csvFormatAlignment.LeftPadding = ((uint)(12));
			// Container child csvFormatAlignment.Gtk.Container+ContainerChild
			this.csvFormatVbox = new global::Gtk.VBox ();
			this.csvFormatVbox.Name = "csvFormatVbox";
			this.csvFormatVbox.Spacing = 6;
			// Container child csvFormatVbox.Gtk.Box+BoxChild
			this.csvFormatUSRadio = new global::Gtk.RadioButton (global::Mono.Unix.Catalog.GetString ("US: 0.12, 0.23"));
			this.csvFormatUSRadio.CanFocus = true;
			this.csvFormatUSRadio.Name = "csvFormatUSRadio";
			this.csvFormatUSRadio.DrawIndicator = true;
			this.csvFormatUSRadio.UseUnderline = true;
			this.csvFormatUSRadio.Group = new global::GLib.SList (global::System.IntPtr.Zero);
			this.csvFormatVbox.Add (this.csvFormatUSRadio);
			global::Gtk.Box.BoxChild w19 = ((global::Gtk.Box.BoxChild)(this.csvFormatVbox [this.csvFormatUSRadio]));
			w19.Position = 0;
			w19.Expand = false;
			w19.Fill = false;
			// Container child csvFormatVbox.Gtk.Box+BoxChild
			this.csvFormatDERadio = new global::Gtk.RadioButton (global::Mono.Unix.Catalog.GetString ("DE: 0,12; 0,23"));
			this.csvFormatDERadio.CanFocus = true;
			this.csvFormatDERadio.Name = "csvFormatDERadio";
			this.csvFormatDERadio.DrawIndicator = true;
			this.csvFormatDERadio.UseUnderline = true;
			this.csvFormatDERadio.Group = this.csvFormatUSRadio.Group;
			this.csvFormatVbox.Add (this.csvFormatDERadio);
			global::Gtk.Box.BoxChild w20 = ((global::Gtk.Box.BoxChild)(this.csvFormatVbox [this.csvFormatDERadio]));
			w20.Position = 1;
			w20.Expand = false;
			w20.Fill = false;
			this.csvFormatAlignment.Add (this.csvFormatVbox);
			this.csvFormatGroup.Add (this.csvFormatAlignment);
			this.csvFormatGroupLabel = new global::Gtk.Label ();
			this.csvFormatGroupLabel.Name = "csvFormatGroupLabel";
			this.csvFormatGroupLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>CSV format</b>");
			this.csvFormatGroupLabel.UseMarkup = true;
			this.csvFormatGroup.LabelWidget = this.csvFormatGroupLabel;
			this.acquisitionTable.Add (this.csvFormatGroup);
			global::Gtk.Table.TableChild w23 = ((global::Gtk.Table.TableChild)(this.acquisitionTable [this.csvFormatGroup]));
			w23.BottomAttach = ((uint)(2));
			w23.LeftAttach = ((uint)(3));
			w23.RightAttach = ((uint)(4));
			w23.XOptions = ((global::Gtk.AttachOptions)(4));
			// Container child acquisitionTable.Gtk.Table+TableChild
			this.intervalLabel = new global::Gtk.Label ();
			this.intervalLabel.Name = "intervalLabel";
			this.intervalLabel.Xalign = 0F;
			this.intervalLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("Interval: 500ms *");
			this.acquisitionTable.Add (this.intervalLabel);
			global::Gtk.Table.TableChild w24 = ((global::Gtk.Table.TableChild)(this.acquisitionTable [this.intervalLabel]));
			w24.TopAttach = ((uint)(1));
			w24.BottomAttach = ((uint)(2));
			w24.XOptions = ((global::Gtk.AttachOptions)(4));
			w24.YOptions = ((global::Gtk.AttachOptions)(1));
			// Container child acquisitionTable.Gtk.Table+TableChild
			this.intervalNumeric = new global::Gtk.SpinButton (1D, 172800D, 1D);
			this.intervalNumeric.CanFocus = true;
			this.intervalNumeric.Name = "intervalNumeric";
			this.intervalNumeric.Adjustment.PageIncrement = 20D;
			this.intervalNumeric.ClimbRate = 1D;
			this.intervalNumeric.Numeric = true;
			this.intervalNumeric.Value = 1D;
			this.acquisitionTable.Add (this.intervalNumeric);
			global::Gtk.Table.TableChild w25 = ((global::Gtk.Table.TableChild)(this.acquisitionTable [this.intervalNumeric]));
			w25.TopAttach = ((uint)(1));
			w25.BottomAttach = ((uint)(2));
			w25.LeftAttach = ((uint)(1));
			w25.RightAttach = ((uint)(2));
			// Container child acquisitionTable.Gtk.Table+TableChild
			this.intervalSetButton = new global::Gtk.Button ();
			this.intervalSetButton.CanFocus = true;
			this.intervalSetButton.Name = "intervalSetButton";
			this.intervalSetButton.UseUnderline = true;
			global::Gtk.Image w26 = new global::Gtk.Image ();
			w26.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-apply", global::Gtk.IconSize.Button);
			this.intervalSetButton.Image = w26;
			this.acquisitionTable.Add (this.intervalSetButton);
			global::Gtk.Table.TableChild w27 = ((global::Gtk.Table.TableChild)(this.acquisitionTable [this.intervalSetButton]));
			w27.TopAttach = ((uint)(1));
			w27.BottomAttach = ((uint)(2));
			w27.LeftAttach = ((uint)(2));
			w27.RightAttach = ((uint)(3));
			// Container child acquisitionTable.Gtk.Table+TableChild
			this.recordToggleButton = new global::Gtk.Button ();
			this.recordToggleButton.CanFocus = true;
			this.recordToggleButton.Name = "recordToggleButton";
			this.recordToggleButton.UseUnderline = true;
			this.recordToggleButton.Label = global::Mono.Unix.Catalog.GetString ("Record");
			this.acquisitionTable.Add (this.recordToggleButton);
			global::Gtk.Table.TableChild w28 = ((global::Gtk.Table.TableChild)(this.acquisitionTable [this.recordToggleButton]));
			w28.XOptions = ((global::Gtk.AttachOptions)(4));
			this.acquisitionAlignment.Add (this.acquisitionTable);
			this.acquisitionGroup.Add (this.acquisitionAlignment);
			this.acquisitionGroupLabel = new global::Gtk.Label ();
			this.acquisitionGroupLabel.Name = "acquisitionGroupLabel";
			this.acquisitionGroupLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Acquisition</b>");
			this.acquisitionGroupLabel.UseMarkup = true;
			this.acquisitionGroup.LabelWidget = this.acquisitionGroupLabel;
			this.mailVbox.Add (this.acquisitionGroup);
			global::Gtk.Box.BoxChild w31 = ((global::Gtk.Box.BoxChild)(this.mailVbox [this.acquisitionGroup]));
			w31.Position = 3;
			w31.Expand = false;
			w31.Fill = false;
			// Container child mailVbox.Gtk.Box+BoxChild
			this.copyrightEventBox = new global::Gtk.EventBox ();
			this.copyrightEventBox.Name = "copyrightEventBox";
			// Container child copyrightEventBox.Gtk.Container+ContainerChild
			this.copyrightLabel = new global::Gtk.Label ();
			this.copyrightLabel.Name = "copyrightLabel";
			this.copyrightLabel.LabelProp = "© 2020, Benedikt Müssig, mikrocontroller.net/topic/491973";
			this.copyrightLabel.Justify = ((global::Gtk.Justification)(2));
			this.copyrightEventBox.Add (this.copyrightLabel);
			this.mailVbox.Add (this.copyrightEventBox);
			global::Gtk.Box.BoxChild w33 = ((global::Gtk.Box.BoxChild)(this.mailVbox [this.copyrightEventBox]));
			w33.Position = 4;
			w33.Expand = false;
			w33.Fill = false;
			this.Add (this.mailVbox);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.DefaultWidth = 400;
			this.DefaultHeight = 400;
			this.Show ();
			this.DeleteEvent += new global::Gtk.DeleteEventHandler (this.OnDeleteEvent);
			this.readoutEventBox.ButtonPressEvent += new global::Gtk.ButtonPressEventHandler (this.OnReadoutEventBoxButtonPressEvent);
			this.refreshPortsButton.Clicked += new global::System.EventHandler (this.OnRefreshPortsButtonClicked);
			this.connectButton.Clicked += new global::System.EventHandler (this.OnConnectButtonClicked);
			this.recordToggleButton.Clicked += new global::System.EventHandler (this.OnRecordToggleButtonClicked);
			this.intervalSetButton.Clicked += new global::System.EventHandler (this.OnIntervalSetButtonClicked);
			this.acquisitionPauseButton.Clicked += new global::System.EventHandler (this.OnAcquisitionPauseButtonClicked);
			this.copyrightEventBox.ButtonPressEvent += new global::Gtk.ButtonPressEventHandler (this.OnCopyrightEventBoxButtonPressEvent);
		}
	}
}
